name: nwchem_shifter

on:
  repository_dispatch:
    types: [backend_automation]
  workflow_dispatch:

jobs:
  docker_schedule:
    if: (github.event_name == 'workflow_dispatch') || (github.event_name == 'schedule')
    strategy:
        fail-fast: false
        matrix:
          folder:
            - nwchem-dev.mpipr.nersc
            - nwchem-dev.mpipr.nersc_old
            - nwchem-702.mpipr.nersc
          openmp: [ Y, N]
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup cache
        id: setup-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/cache
          key: ${{ matrix.folder}}-nwchemshiftercache-v005
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        if: ${{ github.actor == github.repository_owner }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: fetch cache
        if: (steps.setup-cache.outputs.cache-hit == 'true')
        run: |
          cd ${{ matrix.folder }}
          ls -lrta
          if [[ -f ~/cache/libext.tar.bz2 ]]; then \
          echo "libext cache present" ; \
          mkdir -p cache|| true ; \
          rsync -av ~/cache/libext* cache/. ; \
          echo "libext cache fetched" ; \
          fi
          if [[ -f ~/cache/simint.tar.bz2 ]]; then \
          echo "simint cache present" ; \
          mkdir -p cache|| true ; \
          rsync -av ~/cache/simint* cache/. ; \
          echo "simint cache fetched" ; \
          fi
          if [[ -f ~/cache/mpich.tar.bz2 ]]; then \
          echo "mpich cache present" ; \
          mkdir -p cache|| true ; \
          rsync -av ~/cache/mpich* cache/. ; \
          echo "mpich cache fetched" ; \
          ls -l cache/ ; \
          echo "======" ; \
          fi
      - name: openmp tag
        id: openmp-tag
        run: |
          if [[ ${{ matrix.openmp }} == 'N'  ]]; then 
            echo "::set-output name=tag::_no_openmp"  
          else 
            echo "::set-output name=tag::"  
          fi
        shell: bash
      - name: docker tag
        id: docker-tag
        run: |
          echo "::set-output name=tag:: ghcr.io/${{ github.actor }}/${{ matrix.folder }}${{ steps.openmp-tag.outputs.tag }}"
        shell: bash
      - name: build_docker
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.actor == github.repository_owner }}
          context: ${{ matrix.folder }}
          tags: ${{ steps.docker-tag.outputs.tag }}
          build-args: |
            USE_OPENMP_VALUE=${{ matrix.openmp }}
      - name: load and test image
        if:  ( github.actor == github.repository_owner )
        run: |
          sleep 30s
          docker pull ${{ steps.docker-tag.outputs.tag }}
          cd /tmp
          umask u=rwx,g=rwx,o=rwx
          umask -S
          svn export https://github.com/nwchemgit/nwchem/trunk/QA >& svnout.log
          cd QA
          docker run --rm  \
          -v `pwd`:/opt/nwchem/QA --entrypoint='/opt/nwchem/QA/runtests.mpi.unix' \
          ${{ steps.docker-tag.outputs.tag }} \
          procs 2 h2o_opt prop_mep_gcube 
      - name: store cache
        if:  ( github.actor == github.repository_owner )
        run: |
            mkdir -p ~/cache/
            docker run --privileged --user 0 --rm \
            --entrypoint='/bin/cp' -v ~/cache:/data \
            ${{ steps.docker-tag.outputs.tag }} \
            -rp /opt/nwchem/src/libext/libext.tar.bz2 /data/.  || true
            docker run --privileged --user 0 --rm \
            --entrypoint='/bin/cp' -v ~/cache:/data \
            ${{ steps.docker-tag.outputs.tag }} \
            -rp /opt/nwchem/src/libext/simint.tar.bz2 /data/.  || true
            docker run --privileged --user 0 --rm \
            --entrypoint='/bin/cp' -v ~/cache:/data \
            ${{ steps.docker-tag.outputs.tag }} \
            -rp /usr/local/mpich.tar.bz2 /data/.  || true
            ls -Ralrt ~/cache || true
