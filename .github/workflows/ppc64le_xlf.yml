name: ppc64le_xlf

on:
  repository_dispatch:
    types: [backend_automation]
  workflow_dispatch:

jobs:
  docker_schedule:
    if: (github.event_name == 'workflow_dispatch') || (github.event_name == 'schedule')
    strategy:
        fail-fast: false
        matrix:
          include:
            - {folder: ppc64le.xlf, archs: linux/ppc64le}
    runs-on: ubuntu-latest
    timeout-minutes: 420
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Qemu
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: crazymax/binfmt:v6.0.0
      - name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: |
              image=moby/buildkit:master
      - name: Login to GitHub Container Registry
        if: ${{ github.actor == github.repository_owner }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Arch
        id: get-arch
        run: |
          echo "::set-output name=arch::$(echo ${{matrix.archs }} | sed 's/linux//'|sed  's/\///g' )"
        shell: bash
      - name: docker tag
        id: docker-tag
        run: |
          echo "::set-output name=tag:: ghcr.io/${{ github.actor }}/${{ matrix.folder }}/${{ steps.get-arch.outputs.arch }}"
        shell: bash
      - name: build date
        id: build-date
        run: |
          echo "::set-output name=date::$(TZ=America/Los_Angeles date +%Y%m%d_%H%M%S)"
      - name: build_schedule
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.actor == github.repository_owner }}
          context: ${{ matrix.folder }}
          shm-size: 256m
          platforms: ${{ matrix.archs }}
          tags: |
            ${{ steps.docker-tag.outputs.tag }}:latest
            ${{ steps.docker-tag.outputs.tag }}:${{ steps.build-date.outputs.date }}
      - name: load and test image
        run: |
          docker pull ${{ steps.docker-tag.outputs.tag }}
