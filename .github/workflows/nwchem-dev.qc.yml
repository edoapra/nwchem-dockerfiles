name: nwchem_docker_qc

on:
  repository_dispatch:
    types: [backend_automation]
  workflow_dispatch:

jobs:
  docker_schedule:
    if: (github.event_name == 'workflow_dispatch') || (github.event_name == 'schedule')
    strategy:
        fail-fast: false
        matrix:
          folder:
            - nwchem-dev.qc
          archs: [linux/amd64]
    runs-on: ubuntu-18.04
    timeout-minutes: 420
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup cache
        id: setup-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/cache
          key: ${{ matrix.folder}}/${{ matrix.archs}}-nwchemdockerqccache-v003
      - name: Qemu
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: crazymax/binfmt:v6.0.0
      - name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        if: ${{ github.actor == github.repository_owner }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Arch
        id: get-arch
        run: |
          echo "::set-output name=arch::$(echo ${{matrix.archs }} | sed 's/linux//'|sed  's/\///g' )"
        shell: bash
      - name: fetch cache
        if: (steps.setup-cache.outputs.cache-hit == 'true') && ( matrix.folder  != 'helloworld' )
        run: |
          cd ${{ matrix.folder }}
          ls -lrta
          if [[ -f ~/cache/libext/lib/libnwc_openblas.a ]]; then \
          echo "libext cache present" ; \
          mkdir -p cache|| true ; \
          [ -d ~/cache/libext ] && rsync -av ~/cache/libext* cache/. ; \
          ls -l cache/libext/lib ; \
          echo "libext cache fetched" ; \
          ls -l cache/libext/ ; \
          ls -l cache/libext/libxc ; \
          echo "======" ; \
          fi
      - name: build_schedule
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.actor == github.repository_owner }}
          context: ${{ matrix.folder }}
          platforms: ${{ matrix.archs }}
          tags: ghcr.io/${{ github.actor }}/${{ matrix.folder }}/${{ steps.get-arch.outputs.arch }}:latest
      - name: load and test image
        if:  ( github.actor == github.repository_owner )
        run: |
          docker pull ghcr.io/${{ github.actor }}/${{ matrix.folder }}/${{ steps.get-arch.outputs.arch }}
          cd /tmp
          umask u=rwx,g=rwx,o=rwx
          umask -S
          svn export https://github.com/nwchemgit/nwchem/branches/yaml/QA >& svnout.log
          cd QA
          docker run --rm  \
          -e NWCHEM_EXECUTABLE=/opt/nwchem/bin/nwchem --entrypoint='/opt/nwchem/QA/runtests.mpi.unix' \
          -v `pwd`:/opt/nwchem/QA ghcr.io/${{ github.actor }}/${{ matrix.folder }}/${{ steps.get-arch.outputs.arch }} \
          procs 2 dft_he2+ prop_mep_gcube cosmo_h2o_dft pyqa3 
      - name: store cache
        if:  ( github.actor == github.repository_owner ) && ( matrix.folder  != 'helloworld' ) 
        run: |
            mkdir -p ~/cache
            ls -lrt ~/cache
            docker run  --privileged --user 0 --rm --platform ${{matrix.archs }} \
            --entrypoint='/bin/cp' -v ~/cache:/data \
            ghcr.io/${{ github.actor }}/${{ matrix.folder }}/${{ steps.get-arch.outputs.arch }} \
            -rp /opt/nwchem/src/libext /data/.
            ls -lrt ~/cache || true
            ls -lrta ~/cache/libext || true
